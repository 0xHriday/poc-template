// SPDX-License-Identifier: MIT
pragma solidity ^0.8.14;

import "forge-std/Test.sol";
import "../src/PoC.sol";

/// @title Proof of Concept Test
/// @notice DO NOT USE ON ANY PUBLIC NETWORK
/// @dev https://book.getfoundry.sh/forge/writing-tests
contract PoCTest is Test {

    /// @notice Attacker EOA address.
    /// @dev First address generated by Anvi. Private key is publicly known.
    address internal constant attacker = address(0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266);

    /// @notice Target address
    address internal constant target = address(0x45);

    /// @notice PoC address
    address internal poc;

    /// @notice Sets up the environment. Deploy contracts here.
    function setup() public {
        poc = address(new PoC(target));
    }

    /// @notice Test the PoC here.
    function testPoC() public {
        // Every external contract call within `testPoC` starting here will have a `msg.sender` of
        // `attacker`.
        // https://book.getfoundry.sh/cheatcodes/start-prank
        vm.startPrank(attacker);

        // Exploit here

    }
}
